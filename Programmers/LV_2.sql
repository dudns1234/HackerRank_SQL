-- 조건에 부합하는 중고거래 상태 조회하기 (핵심 : IF문)
SELECT BOARD_ID, WRITER_ID, TITLE, PRICE, 
CASE
    WHEN STATUS="SALE" THEN '판매중'
    WHEN STATUS="RESERVED" THEN '예약중'
    ELSE '거래완료' 
END AS STATUS
FROM USED_GOODS_BOARD
WHERE CREATED_DATE = '2022-10-05'
ORDER BY BOARD_ID DESC;

-- 자동차 평균 대여 기간 구하기 (핵심: ROUND 함수, DATEDIFF 후 +1)
SELECT CAR_ID, ROUND(AVG(DATEDIFF(END_DATE, START_DATE)+1),1) AS AVERAGE_DURATION
FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
GROUP BY CAR_ID
HAVING ROUND(AVG(DATEDIFF(END_DATE, START_DATE)+1),1)>=7
ORDER BY AVERAGE_DURATION DESC, CAR_ID DESC

-- DATETIME에서 DATE로 형 변환 (핵심 : FORMAT아니고 DATE_FORMAT!!)
SELECT ANIMAL_ID, NAME, DATE_FORMAT(DATETIME,"%Y-%m-%d") AS 날짜
FROM ANIMAL_INS

-- 중성화 여부 파악하기 (핵심 : CASE WHEN 조건 THEN 결과 ELSE 결과 END)
SELECT ANIMAL_ID, NAME, CASE
                            WHEN SEX_UPON_INTAKE like '%Neutered%' THEN 'O'
                            WHEN SEX_UPON_INTAKE like '%Spayed%' THEN 'O'
                            ELSE 'X'
                        END AS '중성화'
FROM ANIMAL_INS

-- 이름에 el이 들어가는 동물 찾기 (핵심 : LIKE '%__%')
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE ANIMAL_TYPE ="Dog" AND NAME LIKE '%el%'
ORDER BY NAME ASC

-- 루시와 엘라 찾기 (핵심 : in 함수)
SELECT ANIMAL_ID, NAME, SEX_UPON_INTAKE
FROM ANIMAL_INS
WHERE NAME in ('Lucy', 'ELLA', 'Pickle', 'Rogan', 'Sabrina', 'Mitty')
ORDER BY ANIMAL_ID ASC

-- 고양이와 개는 몇 마리 있을까 (핵심 : count함수)
SELECT ANIMAL_TYPE, COUNT(ANIMAL_TYPE) count
FROM ANIMAL_INS
GROUP BY ANIMAL_TYPE
ORDER BY ANIMAL_TYPE ASC

-- 자동차 종류 별 특정 옵션이 포함된 자동차 수 구하기
SELECT CAR_TYPE, COUNT(*) CARS
FROM CAR_RENTAL_COMPANY_CAR
WHERE OPTIONS LIKE '%통풍시트%' OR OPTIONS LIKE '%열선시트%' OR OPTIONS LIKE '%가죽시트%'
GROUP BY CAR_TYPE
ORDER BY CAR_TYPE

-- 조건에 맞는 도서와 저자 리스트 출력하기
SELECT B.BOOK_ID, A.AUTHOR_NAME, DATE_FORMAT(B.PUBLISHED_DATE,'%Y-%m-%d') PUBLISHED_DATE
FROM BOOK B, AUTHOR A
WHERE B.AUTHOR_ID = A.AUTHOR_ID AND B.CATEGORY = '경제'
ORDER BY PUBLISHED_DATE

-- 성분으로 구분한 아이스크림 총 주문량
SELECT I.INGREDIENT_TYPE, SUM(F.TOTAL_ORDER) TOTAL_ORDER
FROM FIRST_HALF F, ICECREAM_INFO I
WHERE F.FLAVOR = I.FLAVOR
GROUP BY I.INGREDIENT_TYPE
ORDER BY TOTAL_ORDER

-- 진료과별 총 예약 횟수 출력하기
SELECT MCDP_CD 진료과코드, COUNT(*) 5월예약건수
FROM APPOINTMENT
WHERE DATE_FORMAT(APNT_YMD,'%Y-%m') = '2022-05'
GROUP BY MCDP_CD
ORDER BY 5월예약건수, 진료과코드

-- 재구매가 일어난 상품과 회원 리스트 구하기
SELECT USER_ID, PRODUCT_ID
FROM ONLINE_SALE
GROUP BY USER_ID, PRODUCT_ID
HAVING COUNT(*)>=2
ORDER BY USER_ID, PRODUCT_ID DESC

-- 상품 별 오프라인 매출 구하기
SELECT P.PRODUCT_CODE, SUM(P.PRICE * S.SALES_AMOUNT) SALES
FROM PRODUCT P, OFFLINE_SALE S
WHERE P.PRODUCT_ID = S.PRODUCT_ID
GROUP BY P.PRODUCT_CODE
ORDER BY SALES DESC, PRODUCT_CODE

 -- 가격대 별 상품 개수 구하기 (핵심 : FLOOR() 함수로 소수점 이하를 무조건 버림)
SELECT FLOOR(PRICE/10000)*10000 PRICE_GROUP , COUNT(PRODUCT_ID) PRODUCTS
FROM PRODUCT
GROUP BY PRICE_GROUP
ORDER BY PRICE_GROUP

-- 카테코리 별 상품 개수 구하기
SELECT LEFT(PRODUCT_CODE,2) CATEGORY, COUNT(*) PRODUCTS
FROM PRODUCT
GROUP BY LEFT(PRODUCT_CODE,2)
ORDER BY CATEGORY

-- 3월에 태어난 여성 회원 목록 출력하기
SELECT MEMBER_ID, MEMBER_NAME, GENDER, DATE_FORMAT(DATE_OF_BIRTH,'%Y-%m-%d') DATE_OF_BIRTH
FROM MEMBER_PROFILE 
WHERE DATE_FORMAT(DATE_OF_BIRTH,'%m') = '03' AND GENDER = 'W' AND TLNO IS NOT NULL
ORDER BY MEMBER_ID

-- 가격이 제일 비싼 식품의 정보 출력하기
SELECT *
FROM FOOD_PRODUCT
WHERE PRICE = (SELECT MAX(PRICE) FROM FOOD_PRODUCT)

-- 입양 시각 구하기(1)
SELECT HOUR(DATETIME) HOUR, COUNT(*) COUNT
FROM ANIMAL_OUTS
GROUP BY HOUR(DATETIME)
HAVING HOUR BETWEEN 9 AND 19
ORDER BY HOUR

-- NULL 처리하기
SELECT ANIMAL_TYPE, IFNULL(NAME,'No name') NAME, SEX_UPON_INTAKE
FROM ANIMAL_INS

-- 중복 제거하기 (핵심 : DICTINCT를 COUNT 안에다 작성! 또한 DISTINCT는 자연적으로 NULL도 지워줌)
SELECT COUNT(DISTINCT NAME) count
FROM ANIMAL_INS
-- WHERE NAME IS NOT NULL => 안써도됨.

-- 동물 수 구하기
SELECT COUNT(*) count
FROM ANIMAL_INS

-- 동명 동물 수 찾기
SELECT NAME, COUNT(NAME) COUNT
FROM ANIMAL_INS
GROUP BY NAME
HAVING COUNT(NAME)>=2
ORDER BY NAME

-- 최솟값 구하기
SELECT DATETIME 시간
FROM ANIMAL_INS
ORDER BY DATETIME LIMIT 1